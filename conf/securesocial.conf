securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/login

    #
    # Enable SSL 
    #
    ssl=false   

     cookie {
            #name=id
            #path=/
            #domain=some_domain
            #httpOnly=true
            #idleTimeoutInMinutes=30
            #absoluteTimeoutInMinutes=720
    }

	
	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey="A33U8JvRh3IlxFUipwUpQ"
		consumerSecret="rSoGR3O4YhaMiT821aWKWsq5RdhSlXaYT30I7oFWo"
	}

    github {
        authorizationUrl="https://github.com/login/oauth/authorize"
        accessTokenUrl="https://github.com/login/oauth/access_token"
        clientId="cc1041161512ab0f5d5b"
        clientSecret="2e428edb1ed5abd3b0e7c08d4e8ac4e639cd6b5f"
    }

    google {
        authorizationUrl="https://accounts.google.com/o/oauth2/auth"
        accessTokenUrl="https://accounts.google.com/o/oauth2/token"
        clientId="459927666173.apps.googleusercontent.com"
        clientSecret="459927666173@developer.gserviceaccount.com"
        scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    }


}